services:
  php:
    build:
      context: ../../
      dockerfile: infra/dev/php/Dockerfile
    working_dir: /var/www/html
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    command: ["php-fpm"]
    volumes:
      - ../../src:/var/www/html
      - ./php/.env:/var/www/html/.env
    ports:
      - "9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./php/.env

  queue-runner:
    build:
      context: ../../
      dockerfile: infra/dev/php/Dockerfile
    working_dir: /var/www/html
    command: [ "sh", "-c", "php artisan queue:work redis --sleep=3 --tries=3" ]
    volumes:
      - ../../src:/var/www/html
      - ./php/.env:/var/www/html/.env
    restart: unless-stopped
    env_file:
      - ./php/.env
    depends_on:
      - redis

  mailpit:
    image: axllent/mailpit
    ports:
      - "8025:8025"  # Web UI

  nginx:
    build:
      context: ../../
      dockerfile: infra/dev/nginx/Dockerfile
    ports:
      - "8088:80"
    volumes:
      - ../../src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  postgres:
    build:
      context: ../../
      dockerfile: infra/dev/postgres/Dockerfile
    restart: unless-stopped
    env_file:
      - ./postgres/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.0.1-alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  adminer:
    image: adminer:5.2.1
    restart: always
    ports:
      - "8083:8080"

  redisinsight:
    image: redis/redisinsight:2.68
    restart: always
    ports:
      - "5540:5540"

  prometheus:
    image: prom/prometheus:v3.4.2
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - nginx

  grafana:
    build:
      context: ../../
      dockerfile: infra/dev/grafana/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    env_file:
      - ./grafana/.env
    depends_on:
      - prometheus

  rabbitmq:
    build:
      context: ../../
      dockerfile: infra/dev/rabbitmq/Dockerfile
    ports:
      - "15672:15672" # Management UI
    env_file:
      - ./rabbitmq/.env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  rabbitmq-consumer:
    build:
      context: ../../
      dockerfile: infra/dev/php/Dockerfile
    working_dir: /var/www/html
    command: [ "php", "artisan", "rabbitmq-events:consume" ]
    volumes:
      - ../../src:/var/www/html
      - ./php/.env:/var/www/html/.env
    restart: unless-stopped
    env_file:
      - ./php/.env
    depends_on:
      - rabbitmq

volumes:
  pgdata:
  redisdata:
  grafana-data:
  rabbitmq-data:

